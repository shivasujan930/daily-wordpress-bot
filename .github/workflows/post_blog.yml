name: Post Blog to WordPress

on:
  schedule:
    - cron: "30 8 * * *"  # Daily at 1:00 PM EDT / 10:00 AM MST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  post-blog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Set up Python & Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          python3 -m venv .venv
          .venv/bin/pip install --upgrade pip
          .venv/bin/pip install --no-cache-dir \
            pytz requests python-dotenv openai>=1.0.0 gTTS \
            ffmpeg-python natsort pillow imageio

      - name: Verify ffmpeg-python is importable
        run: |
          .venv/bin/python -c "import ffmpeg; print('✅ ffmpeg-python works')"

      # 1️⃣ Blog generation
      - name: Run blog and summary generator
        run: .venv/bin/python final.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      # 2️⃣ Blog voiceover
      - name: Generate blog voiceover
        run: .venv/bin/python generate_audio_from_blog.py

      - name: Upload blog audio to WordPress
        run: .venv/bin/python upload_audio_and_embed.py
        env:
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      # 3️⃣ Video script + voiceover
      - name: Generate 20s video narration
        run: .venv/bin/python generate_video_prompt.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Generate video voiceover
        run: .venv/bin/python generate_audio_for_video.py

      # 4️⃣ Visuals from DALL·E
      - name: Generate visual prompts
        run: .venv/bin/python generate_visual_prompts.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Generate AI images
        run: .venv/bin/python generate_ai_images.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 5️⃣ Final video using ffmpeg-python
      - name: Create video from images and audio
        run: .venv/bin/python generate_video_from_images.py

      - name: Upload video to WordPress
        run: .venv/bin/python upload_video_to_wp.py
        env:
          WP_USERNAME:     ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          WP_SITE_URL:     ${{ secrets.WP_SITE_URL }}

      - name: Upload video to YouTube Shorts
        run: python upload_to_youtube.py

      # 6️⃣ Save generated AI images to GitHub
      - name: Save AI-generated images to repo
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add ai_images/*.png
          git commit -m "Save AI-generated scene images [skip ci]" || echo "No image changes to commit"
          git push

      # 7️⃣ Commit logs
      - name: Commit history logs
        if: success()
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add blog_history.txt video_prompt_history.txt visual_prompt_history.txt
          git commit -m "Update history logs [skip ci]" || echo "No changes to commit"
          git push
